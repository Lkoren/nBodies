

- picking code for bodies + widgets for position/velocity setting
- camera controls:
	- set target
	- follow system centre of mass
	- resize frustum based on system setup

-change trails over to particle system






Basic dev:
- ability to serialize and save/load state 
- encapsulate render and physics logic in functions.
- add random rotation to each body
- improve trail logic

Phyics:
- add rk4 integration method
- numerical easing

UI/UX:
- GUI 
	
- shader effects
- energy vizulization
- web app on GAE, Heroku, other?
- astronomical orbit visualizations?
- impliment something from http://suki.ipb.ac.rs/3body/ ??? 

Advanced dev:

- extend Vector3's syntax to be more natural?
- profile/optimize the code?
	- impliment parts in asm.js?





done!
- migrate to GIT
- seperate physics logic into new file
- link mesh creation to body creation.
- - STAR TRAILS
	-fix real-time render issue	
-get a better camera
- move to THREE's partical system
	-trails implimented as particle systems.
	