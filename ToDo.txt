
- camera control UI element:
	- set target
	- follow system centre of mass
	- resize frustum based on system setup

-background elements
-a few more presets
	- 3 body system with L points
	
-make trail opacity fade as trail grows
-figure out what Rob's bug report is about
-improve performance -- post processing killed it. 
	-option to turn off post-processing


Basic dev:
- save to server

Phyics:
- add rk4 integration method

UI/UX:
- shader effects
- energy vizulization
- web app on GAE, Heroku, other?
- astronomical orbit visualizations?
- impliment something from http://suki.ipb.ac.rs/3body/ ??? 

Advanced dev:

- extend Vector3's syntax to be more natural?
- profile/optimize the code?
	- impliment parts in asm.js?





done!
- migrate to GIT
- seperate physics logic into new file
- link mesh creation to body creation.
- - STAR TRAILS
	-fix real-time render issue	
-get a better camera
- move to THREE's partical system
	-trails implimented as particle systems.
- numerical easing
- picking code for bodies + widgets for position/velocity setting
- ability to save/load states
- GUI started